<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="com.linkedlist.DoublyLinkedList"/>
<fullyQualifiedTypeName name="java.time.format.ResolverStyle"/>
<fullyQualifiedTypeName name="com.recursion.sumOfNatural"/>
<fullyQualifiedTypeName name="com.recursion.numberpower"/>
<fullyQualifiedTypeName name="com.recursion.MatrixProblem"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="GarbageCollection"/>
<fullyQualifiedTypeName name="java.lang.Thread"/>
<fullyQualifiedTypeName name="ThreadJoin"/>
<fullyQualifiedTypeName name="com.treeds.BInaryTree"/>
<fullyQualifiedTypeName name="com.treeds.MyNode"/>
<fullyQualifiedTypeName name="java.lang.Object"/>
<fullyQualifiedTypeName name="ObjectReplica"/>
<fullyQualifiedTypeName name="ObjectReplica2"/>
<fullyQualifiedTypeName name="ObjectReference3"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="ObjectReplica4"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="com.producerconsumer.Producer"/>
<fullyQualifiedTypeName name="com.dynamic.NQueenProblem"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="MethodReference"/>
<fullyQualifiedTypeName name="FuncInterface"/>
<fullyQualifiedTypeName name="com.linkedlist.LinkedList"/>
<fullyQualifiedTypeName name="Node"/>
<fullyQualifiedTypeName name="ProducerConsumerProblem.Consumer"/>
<fullyQualifiedTypeName name="ProducerConsumerProblem.LinkedListNew"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.stream.Collector"/>
<fullyQualifiedTypeName name="Test.Employee"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.nio.file.Files"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="Test.sort_by_salary"/>
<fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
<fullyQualifiedTypeName name="Test.QuickSort"/>
<fullyQualifiedTypeName name="Test.SAMInterface"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="java.util.NoSuchElementException"/>
<fullyQualifiedTypeName name="Test.SAMInterfaceClass"/>
<fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
<fullyQualifiedTypeName name="com.DynamicProg.LongestIncreasingSubsequence"/>
<fullyQualifiedTypeName name="java.util.Vector"/>
<fullyQualifiedTypeName name="com.DynamicProg.KnightMinMoves"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="com.DynamicProg.LongestCommonSubsequence"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.Iterator"/>
<fullyQualifiedTypeName name="java.util.Comparator"/>
<fullyQualifiedTypeName name="com.streamslearn.generics.Employee"/>
</qualifiedTypeNameHistroy>
